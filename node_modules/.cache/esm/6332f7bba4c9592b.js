let Joi;_a4c‍.x([["default",()=>_a4c‍.o]]);_a4c‍.w("joi",[["default",["Joi"],function(v){Joi=v}]]);

// Validation Schema
const registerController = {
  register(req, res, next) {
    const registerSchema = Joi.object({
      name: Joi.string().min(3).max(30).required(),
      email: Joi.string().email().required(),
      password: Joi.string()
        .pattern(new RegExp("^[a-zA-Z0-9]{3,30}$"))
        .required(),
      repeat_password: Joi.ref("password"),
    });
    // End of Validation Schema

    const {error} = registerSchema.validate(req.body);
    if (error) {
      return next(error);
    }

    res.send({
      message: "OK",
      data: req.body,
    });
  },
};

_a4c‍.d(registerController);
